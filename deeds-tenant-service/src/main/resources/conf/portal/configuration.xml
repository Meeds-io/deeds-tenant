<?xml version="1.0" encoding="UTF-8"?>
<!--

	This file is part of the Meeds project (https://meeds.io/).
	Copyright (C) 2022 Meeds Association contact@meeds.io
	This program is free software; you can redistribute it and/or
	modify it under the terms of the GNU Lesser General Public
	License as published by the Free Software Foundation; either
	version 3 of the License, or (at your option) any later version.
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
	Lesser General Public License for more details.
	You should have received a copy of the GNU Lesser General Public License
	along with this program; if not, write to the Free Software Foundation,
	Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

-->
<configuration
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.exoplatform.org/xml/ns/kernel_1_3.xsd http://www.exoplatform.org/xml/ns/kernel_1_3.xsd"
   xmlns="http://www.exoplatform.org/xml/ns/kernel_1_3.xsd">

  <component>
    <type>io.meeds.tenant.metamask.web.MetamaskLoginExtension</type>
  </component>

  <component>
    <type>io.meeds.tenant.metamask.web.MetamaskRegisterExtension</type>
  </component>

  <component>
    <type>io.meeds.tenant.metamask.service.TenantManagerService</type>
    <init-params>
      <value-param>
        <name>nftId</name>
        <description>Dedicated NFT for current Installation</description>
        <value>${meeds.tenantManagement.nftId:}</value>
      </value-param>
      <values-param>
        <name>managerDefaultRoles</name>
        <value>*:/platform/administrators</value>
        <value>*:/platform/analytics</value>
        <value>*:/platform/rewarding</value>
      </values-param>
    </init-params>
  </component>

  <component>
    <type>io.meeds.tenant.metamask.storage.TenantManagerStorage</type>
    <init-params>
      <value-param>
        <name>es.url</name>
        <value>${meeds.tenantManagement.es.url:}</value>
      </value-param>
      <value-param>
        <name>es.username</name>
        <value>${meeds.tenantManagement.es.username:}</value>
      </value-param>
      <value-param>
        <name>es.password</name>
        <value>${meeds.tenantManagement.es.password:}</value>
      </value-param>
      <value-param>
        <name>es.index</name>
        <value>${meeds.tenantManagement.es.index:deed_tenant_manager}</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <type>io.meeds.tenant.metamask.service.MetamaskLoginService</type>
    <init-params>
      <value-param>
        <name>allow.registration</name>
        <value>${meeds.register.metamask.allowUserRegistration:false}</value>
      </value-param>
      <value-param>
        <name>secureRootAccessWithMetamask</name>
        <value>${meeds.login.metamask.secureRootAccessWithMetamask:true}</value>
      </value-param>
      <value-param>
        <name>allowedRootAccessWallets</name>
        <value>${meeds.login.metamask.allowedRootAccessWallets:}</value>
      </value-param>
    </init-params>
  </component>

  <external-component-plugins>
    <target-component>org.exoplatform.services.security.Authenticator</target-component>
    <component-plugin>
      <name>MetamaskAuthenticator</name>
      <set-method>addAuthenticatorPlugin</set-method>
      <type>io.meeds.tenant.metamask.authenticator.MetamaskAuthenticator</type>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.web.filter.ExtensibleFilter</target-component>
    <component-plugin>
      <name>MetamaskRegistrationFilterDefinition</name>
      <set-method>addFilterDefinitions</set-method>
      <type>io.meeds.tenant.metamask.web.filter.MetamaskRegistrationFilterDefinition</type>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.services.cache.CacheService</target-component>
    <component-plugin>
      <name>addExoCacheConfig</name>
      <set-method>addExoCacheConfig</set-method>
      <type>org.exoplatform.services.cache.ExoCacheConfigPlugin</type>
      <description>Configures the cache for deed NFT properties</description>
      <init-params>
        <object-param>
          <name>deed.properties</name>
          <description>Deed NFT properties</description>
          <object type="org.exoplatform.services.cache.impl.infinispan.generic.GenericExoCacheConfig">
            <field name="name">
              <string>deed.properties</string>
            </field>
            <field name="maxSize">
              <int>${exo.cache.deed.properties.MaxNodes:50}</int>
            </field>
            <field name="liveTime">
              <long>${exo.cache.deed.properties.TimeToLive:-1}</long>
            </field>
            <field name="strategy" profiles="cluster">
              <string>${exo.cache.deed.properties.strategy:LIRS}</string>
            </field>
            <field name="cacheMode" profiles="cluster">
              <string>${exo.cache.deed.properties.cacheMode:asyncInvalidation}</string>
            </field>
          </object>
        </object-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

</configuration>
